<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  

<mapper namespace="com.library.mapper.mylib.NotebookRoomMapper">

	<!-- 좌석 정보 출력(전체 | 로그인한 기준) -->
	<!-- 전체 좌석 조회 -->
	<select id="nbRoom_list_all" resultType="com.library.model.mylib.NoteBookRoomDTO">
		select *
		  from reading_room where seat_no &gt; 96
		 order by seat_no
	</select>
	<!-- 예약 좌석 조회 -->
	<select id="nbRoom_info" resultType="com.library.model.mylib.NoteBookRoomDTO">
		select *
		  from reading_room 
		 where user_id = #{user_id}
	</select>



	<!-- 예약 | 좌석 이동 | 퇴실 | 좌석 시간 연장 -->
	<!-- 좌석 예약 -->
	<update id="nbRoom_booking">
		update reading_room
		   set user_id = #{user_id}, checkin_time = current_timestamp, 
		   	   checkout_time = CASE
								   WHEN substr(current_timestamp, 12, 2) >= 15
								   THEN date_add(curdate(), INTERVAL 18 HOUR)
								   ELSE date_add(current_timestamp, INTERVAL 3 HOUR) 
							   END
		 where seat_no = #{seat_no}
	</update>
	<!-- 좌석 상태 체크 -->
	<select id="nb_seat_check" resultType="int">
		select count(*) 
		  from reading_room
		 where seat_no = #{seat_no} and user_id is null
	</select>
	
	<!-- 좌석 이동 -->
	<update id="nbRoom_moveSeat">
		update reading_room 
		   set seat_no = #{seat_no} 
		 where seat_no = #{seat_no} 
	</update>

	<!-- 좌석 반납 -->
	<update id="nbRoom_delete">
		update reading_room 
		   set user_id = null, checkin_time = null, checkout_time = null 
		 where user_id = #{user_id}
	</update>
	
	<!-- 좌석 연장 -->
	<update id="nbRoom_extend">
		update reading_room 
		   set checkout_time = CASE
								   WHEN substr(current_timestamp, 12, 2) >= 16
								   THEN date_add(curdate(), INTERVAL 18 HOUR)
								   ELSE date_add(current_timestamp, INTERVAL 2 HOUR) 
							   END
		 where user_id = #{user_id}
	</update>
	
	
	
	
	<!-- 잔여 좌석 | 사용 중인 좌석 -->
	<!-- 잔여 좌석 -->
	<select id="nbRoom_usingSeat" resultType="int">
		select count(*) - (select count(DISTINCT(user_id)) from reading_room where seat_no &gt; 96)
		  from reading_room
		  where seat_no &gt; 96
	</select>
	<!-- 사용 중 좌석 -->
	<select id="nbRoom_usedSeat" resultType="int">
		select count(DISTINCT(user_id))
		  from reading_room
		 where seat_no &gt; 96
	</select>
	
	<!-- 잔여 좌석 | 사용 중인 좌석 -->
	<!-- 잔여 좌석 -->
	<select id="rd1Room_usingSeat" resultType="int">
		select count(*) - (select count(DISTINCT(user_id)) from reading_room where seat_no &lt; 55)
		  from reading_room
		  where seat_no &lt; 55
	</select>
	<!-- 사용 중 좌석 -->
	<select id="rd1Room_usedSeat" resultType="int">
		select count(DISTINCT(user_id))
		  from reading_room
		 where seat_no &lt; 55
	</select>
	
	<!-- 잔여 좌석 | 사용 중인 좌석 -->
	<!-- 잔여 좌석 -->
	<select id="rd2Room_usingSeat" resultType="int">
		select count(*) - (select count(DISTINCT(user_id)) from reading_room where seat_no &gt; 54 and seat_no &lt; 97)
		  from reading_room
		  where seat_no &gt; 54 and seat_no &lt; 97
	</select>
	<!-- 사용 중 좌석 -->
	<select id="rd2Room_usedSeat" resultType="int">
		select count(DISTINCT(user_id))
		  from reading_room
		 where seat_no &gt; 54 and seat_no &lt; 97
	</select>




	<!-- 좌석 insert(test에서 진행) -->
	<insert id="insert">
		insert into reading_room values(#{seat_no}, null, null, null);
	</insert>
</mapper>